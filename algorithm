https://chat.openai.com/c/60ea58e0-344b-488b-9945-3c1e375c6108
https://www.tutorialspoint.com/online_python_compiler.php

Parse the input vectors and mapping CSV data into pandas DataFrames.

Filter the rows in the input DataFrame that contain 'INI' in the "col3" column and create a DataFrame named "init_df."

Filter the rows in the input DataFrame that doesn't contain 'INI' in the "col3" column and create a DataFrame named "body_df."

Merge "init_df" with the "mapping_df" based on the specified conditions, where "mapping.ini_core1" matches "init.col4" and "mapping.ini_core2" matches "init.col5." Create a DataFrame named "init_mapped_df."

Merge "body_df" with the "mapping_df" based on the specified conditions, where "mapping.body_core1" matches "body.col6" and "mapping.body_core2" matches "body.col7." Create a DataFrame named "body_mapped_df."

Combine "init_mapped_df" and "body_mapped_df" into a single DataFrame named "init_body" using pd.concat. This DataFrame will contain both "init" and "body" data.

-----Code ---
import pandas as pd
from io import StringIO

# Input vectors CSV content
input_vectors_csv = """col1_col2_col3_col4_col5_col6_col7
word1_word2_INI_corei1_coreia1_word6_word7
word1_word2_INI_corei2_coreia2_word6_word7
word1_word2_INI_corei3_coreia3_word6_word7
word1_word2_INI_corei4_coreia4_word6_word7
word1_word2_INI_corei5_coreia5_word6_word7
word1_word2_body_coreb1_coreba1_word6_word7
word1_word2_body_corebw1_corebaq1_word6_word7
word1_word2_body_corebr1_corebat1_word6_word7
word1_word2_body_corebx2_corebay2_word6_word7
word1_word2_body_coreb3_coreba3_word6_word7
word1_word2_body_coreb4_coreba4_word6_word7
word1_word2_body_coreb5_coreba5_word6_word7
word1_word2_body_coreby_corebay_word6_word7
word1_word2_body1_coreb1_coreba1_word6_word7
word1_word2_body1_corebw1_corebaq1_word6_word7
word1_word2_body1_corebr1_corebat1_word6_word7
word1_word2_body1_corebx2_corebay2_word6_word7
word1_word2_body1_coreb3_coreba3_word6_word7
word1_word2_body1_coreb4_coreba4_word6_word7
word1_word2_body1_coreb5_coreba5_word6_word7
word1_word2_body1_coreby_corebay_word6_word7
word1_word2_body2_coreb1_coreba1_word6_word7
word1_word2_body2_corebw1_corebaq1_word6_word7
word1_word2_body2_corebr1_corebat1_word6_word7
word1_word2_body2_corebx2_corebay2_word6_word7
word1_word2_body2_coreb3_coreba3_word6_word7
word1_word2_body2_coreb4_coreba4_word6_word7
word1_word2_body2_coreb5_coreba5_word6_word7
word1_word2_body2_coreby_corebay_word6_word7
word1_word2_body3_coreb1_coreba1_word6_word7
word1_word2_body3_corebw1_corebaq1_word6_word7
word1_word2_body3_corebr1_corebat1_word6_word7
word1_word2_body3_corebx2_corebay2_word6_word7
word1_word2_body3_coreb3_coreba3_word6_word7
word1_word2_body3_coreb4_coreba4_word6_word7
word1_word2_body3_coreb5_coreba5_word6_word7
word1_word2_body3_coreby_corebay_word6_word7
"""

# Mapping table CSV content
mapping_csv = """ini_core1,ini_core2,body_core1,body_core2
corei1,coreia1,coreb1,coreba1
corei1,coreia1,corebw1,corebaq1
corei1,coreia1,corebr1,corebat1
corei2,coreia2,corebx2,corebay2
corei3,coreia3,coreb3,coreba3
corei4,coreia4,coreb4,coreba4
corei5,coreia5,coreb5,coreba5
corei5,coreia5,coreby,corebay
"""

# Use StringIO to create file-like objects for pandas to read from
input_data = StringIO(input_vectors_csv)
mapping_data = StringIO(mapping_csv)

# Read input vectors and mapping data into DataFrames
input_df = pd.read_csv(input_data, sep='_')
mapping_df = pd.read_csv(mapping_data)

# Filter rows in input_df containing 'INI' in col3
init_df = input_df[input_df['col3'] == 'INI']

# Filter rows in input_df containing 'body' in col3
body_df = input_df[input_df['col3'] != 'INI']

# Join init_df with mapping_df on specified conditions
init_mapped_df = pd.merge(init_df, mapping_df, left_on=['col4', 'col5'], right_on=['ini_core1', 'ini_core2'])

# Join body_df with mapping_df on specified conditions
body_mapped_df = pd.merge(body_df, mapping_df, left_on=['col4', 'col5'], right_on=['body_core1', 'body_core2'])

# Print the resulting DataFrames
print("init_mapped_df:")
print(init_mapped_df)

print("\nbody_mapped_df:")
print(body_mapped_df)


# Combine init_mapped_df and body_mapped_df column-wise into a single DataFrame named "init_body"
init_body = pd.concat([init_mapped_df, body_mapped_df], axis=1)

# Print the resulting init_body DataFrame
print("init_body:")
print(init_body)
-------------------Rough copy

Assume a Input vectors is a list of words seprated by underscore (_) that contains 7 words separated by _ next split those words using _ and assign it to the data frame.
Columns are in the first row. 
If column three contains the word INI then filter and get only that value and assign it to a dataframe called init.
The remaining to be assigned to dataframe called body.

Assume there is another table csv comma separated that contains 4 columns called mapping 
with headers as ini_core1,ini_core2,body_core1,body_core2. Assign it to a dataframe called mapping.
Now join these two tables by combining mapping.ini_core1 = init.col4 and mapping.ini_core2 = body.col5 and mapping.body_core1 = body.col4 and  mapping.body_core1 = body.col5

Input vectors 
col1_col2_col3_col4_col5_col6_col7
word1_word2_INI_corei1_coreia1_word6_word7
word1_word2_INI_corei2_coreia2_word6_word7
word1_word2_INI_corei3_coreia3_word6_word7
word1_word2_INI_corei4_coreia4_word6_word7
word1_word2_INI_corei5_coreia5_word6_word7
word1_word2_body_coreb1_coreba1_word6_word7
word1_word2_body_corebw1_corebaq1_word6_word7
word1_word2_body_corebr1_corebat1_word6_word7
word1_word2_body_corebx2_corebay2_word6_word7
word1_word2_body_coreb3_coreba3_word6_word7
word1_word2_body_coreb4_coreba4_word6_word7
word1_word2_body_coreb5_coreba5_word6_word7
word1_word2_body_coreby_corebay_word6_word7
word1_word2_body1_coreb1_coreba1_word6_word7
word1_word2_body1_corebw1_corebaq1_word6_word7
word1_word2_body1_corebr1_corebat1_word6_word7
word1_word2_body1_corebx2_corebay2_word6_word7
word1_word2_body1_coreb3_coreba3_word6_word7
word1_word2_body1_coreb4_coreba4_word6_word7
word1_word2_body1_coreb5_coreba5_word6_word7
word1_word2_body1_coreby_corebay_word6_word7
word1_word2_body2_coreb1_coreba1_word6_word7
word1_word2_body2_corebw1_corebaq1_word6_word7
word1_word2_body2_corebr1_corebat1_word6_word7
word1_word2_body2_corebx2_corebay2_word6_word7
word1_word2_body2_coreb3_coreba3_word6_word7
word1_word2_body2_coreb4_coreba4_word6_word7
word1_word2_body2_coreb5_coreba5_word6_word7
word1_word2_body2_coreby_corebay_word6_word7
word1_word2_body3_coreb1_coreba1_word6_word7
word1_word2_body3_corebw1_corebaq1_word6_word7
word1_word2_body3_corebr1_corebat1_word6_word7
word1_word2_body3_corebx2_corebay2_word6_word7
word1_word2_body3_coreb3_coreba3_word6_word7
word1_word2_body3_coreb4_coreba4_word6_word7
word1_word2_body3_coreb5_coreba5_word6_word7
word1_word2_body3_coreby_corebay_word6_word7

Mapping table csv 
ini_core1,ini_core2,body_core1,body_core2
corei1,coreia1,coreb1,coreba1
corei1,coreia1,corebw1,corebaq1
corei1,coreia1,corebr1,corebat1
corei2,coreia2,corebx2,corebay2
corei3,coreia3,coreb3,coreba3
corei4,coreia4,coreb4,coreba4
corei5,coreia5,coreb5,coreba5
corei5,coreia5,coreby,corebay
