{
    "tssupdate3": {
        "getphasing": {
            "mandatory": {
                "chip": {
                    "type": "string",
                    "description": "Project name"
                },
                "rev": {
                    "type": "varchar",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "varchar",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                },
                "STDOUT": {
                    "type": "OUTFILE",
                    "description": "Name of the output file is fixed as phasing.csv in the pwd",
                    "choice": "phasing.csv"
                },
                "platform": {
                    "type": "enum",
                    "description": "platform name",
                    "choice": "ATE,ATE_GGC,SLT_GGC,UFLEX,ATE_QFTEE"
                }
            },
            "optional": {
                "status": {
                    "type": "enum",
                    "description": "selection of status Pass/Fail",
                    "choice": "P,F"
                }
            },
            "example": ["tssupdate3 -getphasing -chip testing_demo -rev r1_secn14lpp -block ATPG_BKP -platform ATE", ""],
            "Template": {
                "tssupdate3 -getphasing -chip <chip> -rev <rev> -block <block> -platform <platform>": ""
            },
			"ListTemplate": {
				"block,pattern,foundry,phase0,phase1,phase2,phase2_auto,phase3,phase3_auto,phase4a,phase4b,ate_time_spent,comments": ""
			},
			"Templates": {
                "Command": "tssupdate3 -getphasing -chip <chip> -rev <rev> -block <block> -platform <platform>",
				"List": "block,pattern,foundry,phase0,phase1,phase2,phase2_auto,phase3,phase3_auto,phase4a,phase4b,ate_time_spent,comments"
			}
        },
        "update_phasing": {
            "mandatory": {
                "update_phasing": {
                    "type": "INFILE",
                    "description": "File with complete path and extension",
					"choice":"/prj/vlsi/pete/ptetools/prod/tss/runcommands/supportFiles/<username>/phasing.csv"
                },
                "chip": {
                    "type": "varchar",
                    "description": "Project name",
                    "Function": "getphasing"
                },
                "rev": {
                    "type": "varchar",
                    "description": "revision name"
                },
                "block": {
                    "type": "varchar",
                    "description": "block name"
                },
                "platform": {
                    "type": "enum",
                    "description": "platform name",
                    "choice": "ATE,ATE_GGC,SLT_GGC,ATE:ATE_GGC:SLT_GGC,ATE:ATE_GGC,ATE:SLT_GGC,ATE_GGC:SLT_GGC,UFLEX,ATE:UFLEX,ATE:SLT_GGC:ATE_GGC:UFLEX,UFLEX:ATE_GGC,UFLEX:SLT_GGC"
                }
            },
            "optional": {
                "type": {
                    "type": "enum",
                    "description": "vector name",
                    "choice": "pattern,test"
                },
                "comment": {
                    "type": "string",
                    "description": "comments"
                }
            },
            "example": ["tssupdate3 -update_phasing /prj/vlsi/pete/ptetools/prod/tss/runcommands/supportFiles/<username>/phasing.csv -chip testing_demo -rev r1_secn14lpp -block ATPG_BKP -platform ATE", ""],
			"ListTemplate": ["#block,pattern,foundry,phase0,phase1,phase2,phase3||delete this line; the line above and replace the sample data below with actual data|ATPG_POIPU,MBURST_tk_atpg_saf_lpc_se0_sr1_topoff_krygld3_XMD,GF,P,P,P,P|ATPG_POIPU,MBURST_tk_atpg_saf_lpc_se0_pll_topoff_llcc4_XMD,GF,P,P,P,P,|ATPG_POIPU,MBURST_tk_atpg_saf_lpc_se0_sr1_topoff_cabo4_XMD,GF,P,P,P,P", ""],
            "Template": {
                "tssupdate3 -update_phasing <update_phasing> -chip <chip> -rev <rev> -block <block> -platform <platform>": ""
            }
        },
        "add_milestone": {
            "mandatory": {
                "add_milestone": {
                    "type": "varchar",
                    "description": "milestone name and date in the format , milestone_name=<MM/DD/YYY>, eg: SC=04/30/2018",
                    "choice": "BTO,TO,SC,BO,SOD,CSRR,CS,P0,P1,P2,P3,P4A,P4B"
                },
                "chip": {
                    "type": "varchar",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "varchar",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "foundry": {
                    "type": "string",
                    "description": "foundry name",
                    "Function": "get_foundry_name(chip,rev)"
                }
            },
            "optional": {},
            "example": ["tssupdate3 -add_milestone SOD=12/12/2014 -chip testing_prj -rev r1_0 -foundry TSMC", ""],
            "Template": {
                "tssupdate3 -add_milestone <add_milestone> -chip <chip> -rev <rev> -foundry <foundry>": ""
            }
        },
        "add_vector": {
            "mandatory": {
                "add_vector": {
                    "type": "string",
                    "description": "vector name"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                },
                "design_engineer": {
                    "type": "string",
                    "description": "design engineer's name"
                },
                "interface": {
                    "type": "string",
                    "description": "interface name"
                },
                "interface_frequency": {
                    "type": "varchar",
                    "description": "interface frequency in MHz"
                },
                "vector_type": {
                    "type": "enum",
                    "description": "vector name",
                    "choice": "'PROD','EVAL','RMA','QMFAT','BURN_IN','DEBUG','UNKNOWN','REPAIR','VALIDATION'"
                }
            },
            "optional": {
                "microcode": {
                    "type": "string",
                    "description": "microcode"
                },
                "base_vector": {
                    "type": "string",
                    "description": "base vector name for debug vectors,from available non debug vector for that block"
                },
                "slice_count": {
                    "type": "integer",
                    "description": "slice count number,1 to available slice number for that vector"
                },
                "platform": {
                    "type": "enum",
                    "description": "platform name",
                    "choice": "ATE,ATE_GGC,SLT_GGC,ATE:ATE_GGC:SLT_GGC,ATE:ATE_GGC,ATE:SLT_GGC,ATE_GGC:SLT_GGC,UFLEX,ATE:UFLEX,ATE:SLT_GGC:ATE_GGC:UFLEX,UFLEX:ATE_GGC,UFLEX:SLT_GGC"
                },
                "80p": {
                    "type": "integer",
                    "description": "80p count number"
                },
                "80p_enable": {
                    "type": "enum",
                    "description": "80p enable status",
                    "choice": "Y,N"
                },
                "scan_tml": {
                    "type": "string",
                    "description": "scan tml value"
                },
                "partial_good": {
                    "type": "enum",
                    "description": "partial good status",
                    "choice": "Y,N"
                },
                "priority": {
                    "type": "integer",
                    "description": "priority"
                },
                "core": {
                    "type": "string",
                    "description": "core"
                },
                "marker": {
                    "type": "string",
                    "description": "marker value",
                    "choice": "'c','d','p','q','i','n'"
                },
                "char": {
                    "type": "string",
                    "description": "char"
                },
                "smoke_suite": {
                    "type": "string",
                    "description": "smote suit value"
                },
                "available": {
                    "type": "enum",
                    "description": "available status",
                    "choice": "Y,N"
                },
                "tags": {
                    "type": "string",
                    "description": "tag value"
                },
                "comment": {
                    "type": "string",
                    "description": "comments"
                }
            },
            "example": ["tssupdate3 -add_vector testing_new1 -chip testing_prj -rev r1_0 -block TDF_ATPG_REST -design_engineer patnaiku -interface JTAG -interface_frequency 10 -vector_type CHAR", ""],
            "Template": {
                "tssupdate3 -add_vector <add_vector> -chip <chip> -rev <rev> -block <block> -design_engineer <design_engineer> -interface <interface> -interface_frequency <interface_frequency> -vector_type <vector_type>": ""
            }
        },
        "add_vector_list": {
            "mandatory": {
                "add_vector": {
                    "type": "INFILE",
                    "description": "vector name",
					"Template":"#vector,design_engineer,interface,interface_frequency,vector_type",
					"Example":"abcd,sundara,TIC,12,PROD",
					"choice":"/prj/vlsi/pete/ptetools/prod/tss/runcommands/supportFiles/<username>/get_vector_details_dir/vector.csv"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "tquery:get_vector_details"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name"
                },
                "block": {
                    "type": "string",
                    "description": "block name"
                },
                "design_engineer": {
                    "type": "string",
                    "description": "design engineer's name"
                },
                "interface": {
                    "type": "string",
                    "description": "interface name"
                },
                "interface_frequency": {
                    "type": "varchar",
                    "description": "interface frequency in MHz"
                },
                "vector_type": {
                    "type": "enum",
                    "description": "vector name",
                    "choice": "'PROD','EVAL','RMA','QMFAT','BURN_IN','DEBUG','UNKNOWN','REPAIR','VALIDATION'"
                }
            },
            "optional": {
                "microcode": {
                    "type": "string",
                    "description": "microcode"
                },
                "base_vector": {
                    "type": "string",
                    "description": "base vector name for debug vectors,from available non debug vector for that block"
                },
                "slice_count": {
                    "type": "integer",
                    "description": "slice count number,1 to available slice number for that vector"
                },
                "platform": {
                    "type": "enum",
                    "description": "platform name",
                    "choice": "ATE,ATE_GGC,SLT_GGC,ATE:ATE_GGC:SLT_GGC,ATE:ATE_GGC,ATE:SLT_GGC,ATE_GGC:SLT_GGC,UFLEX,ATE:UFLEX,ATE:SLT_GGC:ATE_GGC:UFLEX,UFLEX:ATE_GGC,UFLEX:SLT_GGC"
                },
                "80p": {
                    "type": "integer",
                    "description": "80p count number"
                },
                "80p_enable": {
                    "type": "enum",
                    "description": "80p enable status",
                    "choice": "Y,N"
                },
                "scan_tml": {
                    "type": "string",
                    "description": "scan tml value"
                },
                "partial_good": {
                    "type": "enum",
                    "description": "partial good status",
                    "choice": "Y,N"
                },
                "priority": {
                    "type": "integer",
                    "description": "priority"
                },
                "core": {
                    "type": "string",
                    "description": "core"
                },
                "marker": {
                    "type": "string",
                    "description": "marker value",
                    "choice": "'c','d','p','q','i','n'"
                },
                "char": {
                    "type": "string",
                    "description": "char"
                },
                "smoke_suite": {
                    "type": "string",
                    "description": "smote suit value"
                },
                "available": {
                    "type": "enum",
                    "description": "available status",
                    "choice": "Y,N"
                },
                "tags": {
                    "type": "string",
                    "description": "tag value"
                },
                "comment": {
                    "type": "string",
                    "description": "comments"
                }
            },
            "preprocess": {
				"getphasing": ""},
            "example": ["tssupdate3 -add_vector /prj/vlsi/pete/ptetools/prod/tss/runcommands/supportFiles/<username>/get_vector_details_dir/vector.csv -chip testing_prj -rev r1_0 -block TDF_ATPG_REST -design_engineer patnaiku -interface JTAG -interface_frequency 10 -vector_type CHAR", ""],
			"ListTemplate": ["#vector_name,design_engineer,interface,interface_frequency,vector_type||delete this line; the line above and replace the sample data below with actual data|abcd,sundara,TIC,12,PROD|abcd2,sundara,TIC,12,PROD|abcd3,sundara,TIC,12,PROD", ""],
            "Template": {
                "tssupdate3 -add_vector <add_vector> -chip <chip> -rev <rev> -block <block> -design_engineer <design_engineer> -interface <interface> -interface_frequency <interface_frequency> -vector_type <vector_type>": ""
            }
        },
        "update_vector_list": {
            "mandatory": {
                "update_vector": {
                    "type": "INFILE",
                    "description": "vector name",
					"Template":"#vector_name,design_engineer,interface,interface_frequency,vector_type",
					"Example":"abcd,sundara,TIC,12,PROD",
					"choice":"/prj/vlsi/pete/ptetools/prod/tss/runcommands/supportFiles/<username>/get_vector_details_dir/vector.csv"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "tquery:get_vector_details,vba_Format_Vector_tssupdate3"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name"
                },
                "block": {
                    "type": "string",
                    "description": "block name"
                },
                "design_engineer": {
                    "type": "string",
                    "description": "design engineer's name"
                },
                "interface": {
                    "type": "string",
                    "description": "interface name"
                },
                "interface_frequency": {
                    "type": "varchar",
                    "description": "interface frequency in MHz"
                },
                "vector_type": {
                    "type": "enum",
                    "description": "vector name",
                    "choice": "'PROD','EVAL','RMA','QMFAT','BURN_IN','DEBUG','UNKNOWN','REPAIR','VALIDATION'"
                }
            },
            "optional": {
                "microcode": {
                    "type": "string",
                    "description": "microcode"
                },
                "base_vector": {
                    "type": "string",
                    "description": "base vector name for debug vectors,from available non debug vector for that block"
                },
                "slice_count": {
                    "type": "integer",
                    "description": "slice count number,1 to available slice number for that vector"
                },
                "platform": {
                    "type": "enum",
                    "description": "platform name",
                    "choice": "ATE,ATE_GGC,SLT_GGC,ATE:ATE_GGC:SLT_GGC,ATE:ATE_GGC,ATE:SLT_GGC,ATE_GGC:SLT_GGC,UFLEX,ATE:UFLEX,ATE:SLT_GGC:ATE_GGC:UFLEX,UFLEX:ATE_GGC,UFLEX:SLT_GGC"
                },
                "80p": {
                    "type": "integer",
                    "description": "80p count number"
                },
                "80p_enable": {
                    "type": "enum",
                    "description": "80p enable status",
                    "choice": "Y,N"
                },
                "scan_tml": {
                    "type": "string",
                    "description": "scan tml value"
                },
                "partial_good": {
                    "type": "enum",
                    "description": "partial good status",
                    "choice": "Y,N"
                },
                "priority": {
                    "type": "integer",
                    "description": "priority"
                },
                "core": {
                    "type": "string",
                    "description": "core"
                },
                "marker": {
                    "type": "string",
                    "description": "marker value",
                    "choice": "'c','d','p','q','i','n'"
                },
                "char": {
                    "type": "string",
                    "description": "char"
                },
                "smoke_suite": {
                    "type": "string",
                    "description": "smote suit value"
                },
                "available": {
                    "type": "enum",
                    "description": "available status",
                    "choice": "Y,N"
                },
                "tags": {
                    "type": "string",
                    "description": "tag value"
                },
                "comment": {
                    "type": "string",
                    "description": "comments"
                }
            },
            "preprocess": {
				"getphasing": ""},
            "example": ["tssupdate3 -update_vector /prj/vlsi/pete/ptetools/prod/tss/runcommands/supportFiles/<username>/get_vector_details_dir/vector.csv -chip testing_prj -rev r1_0 -block TDF_ATPG_REST -design_engineer patnaiku -interface JTAG -interface_frequency 10 -vector_type CHAR", ""],
			"ListTemplate": ["#vector_name,design_engineer,interface,interface_frequency,vector_type||delete this line; the line above and replace the sample data below with actual data|abcd,sundara,TIC,12,PROD|abcd2,sundara,TIC,12,PROD|abcd3,sundara,TIC,12,PROD", ""],
            "Template": {
                "tssupdate3 -update_vector <update_vector> -chip <chip> -rev <rev> -block <block> -design_engineer <design_engineer> -interface <interface> -interface_frequency <interface_frequency> -vector_type <vector_type>": ""
            }
        },
        "remove_vector": {
            "mandatory": {
                "remove_vector": {
                    "type": "string",
                    "description": "vector name"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                }
            },
            "optional": {},
            "example": [
                "tssupdate3 -remove_vector testing_new1 -chip testing_prj -rev r1_0 -block TDF_ATPG_REST",
                ""
            ],
            "Template": {
                "tssupdate3 -remove_vector <remove_vector> -chip <chip> -rev <rev> -block <block>": ""
            }
        },
        "remove_vector_list": {
            "mandatory": {
                "remove_vector": {
                    "type": "INFILE",
                    "description": "vector name",
					"Template":"#vector",
					"Example":"abcd",
					"choice":"/prj/vlsi/pete/ptetools/prod/tss/runcommands/supportFiles/<username>/get_vector_details_dir/vector.csv"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "tquery:get_vector_details,vba_Format_Vector_tssupdate3_delete"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name"
                },
                "block": {
                    "type": "string",
                    "description": "block name"
                }
            },
            "optional": {},
            "preprocess": {
				"getphasing": ""},
            "example": ["tssupdate3 -remove_vector /prj/vlsi/pete/ptetools/prod/tss/runcommands/supportFiles/<username>/get_vector_details_dir/vector.csv -chip testing_prj -rev r1_0 -block TDF_ATPG_REST", ""],
			"ListTemplate": ["#vector_name||delete this line; the line above and replace the sample data below with actual data|abcd|abcd2|abcd3", ""],
            "Template": {
                "tssupdate3 -remove_vector <remove_vector> -chip <chip> -rev <rev> -block <block>": ""
            }
        },
		"add_label": {
            "mandatory": {
                "add_label": {
                    "type": "string",
                    "description": "label name"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                },
				"vector": {
					"type": "string",
					"description": "vector name"
				},
				"port_name": {
					"type": "string",
					"description": "port name"
				},
				"frequency": {
					"type": "string",
					"description": "frequency"
				},
				"xmode": {
					"type": "string",
					"description": "select xmode",
					"choice": "X1,X2,X3,X4,X5,X6,X7,X8"
				},
				"vector_process": {
					"type": "string",
					"description": "vector process",
					"choice": "D2ATE,PA,STIL_EVCD,MANUAL,LEGACY"
				},
				"bin_si_revision": {
					"type": "string",
					"description": "bin si revision"
				}
            },
            "optional": {},
            "example": ["tssupdate3 -add_label testing_new1_label1 -chip testing_prj -rev r1_0 -block TDF_ATPG_REST -vector testing_new1 -port_name TIC -frequency 20 -xmode X1 -vector_process MANUAL -bin_si_revision r1_0", ""],
            "Template": {
                "tssupdate3 -add_label <add_label> -chip <chip> -rev <rev> -block <block> -vector <vector> -port_name <port_name> -frequency <frequency> -xmode <xmode> -vector_process <vector_process> -bin_si_revision <bin_si_revision>": ""
            }
        },
		"remove_label": {
            "mandatory": {
                "remove_label": {
                    "type": "string",
                    "description": "label name"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                }
            },
            "optional": {},
            "example": ["tssupdate3 -remove_label testing_new1_label1 -chip testing_prj -rev r1_0 -block TDF_ATPG_REST", ""],
            "Template": {
                "tssupdate3 -remove_label <remove_label> -chip <chip> -rev <rev> -block <block>": ""
            }
        },
        "remove_burst": {
            "mandatory": {
                "remove_burst": {
                    "type": "string",
                    "description": "burst name"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                }
            },
            "optional": {},
            "example": ["tssupdate3 -remove_burst MBURST_testing_new1_XMD -chip testing_prj -rev r1_0 -block TDF_ATPG_REST"],
            "Template": {
                "tssupdate3 -remove_burst <remove_burst> -chip <chip> -rev <rev> -block <block>": ""
            }
        },
        "remove_pattern": {
            "mandatory": {
                "remove_pattern": {
                    "type": "string",
                    "description": "pattern name"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                }
            },
            "optional": {},
            "example": ["tssupdate3 -remove_pattern testing_new1 -chip testing_prj -rev r1_0 -block TDF_ATPG_REST"],
            "Template": {
                "tssupdate3 -remove_pattern <remove_pattern> -chip <chip> -rev <rev> -block <block>": ""
            }
        },
        "add_project": {
            "mandatory": {
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "foundry" :{
                    "type": "string",
                    "description": "foundry name",
                    "Function": "get_foundry_name(chip,rev)"
                }
            },
            "optional": {},
            "example": ["tssupdate3 -add_project -chip testing_prj_new -rev r1_tsmc20nm -foundry TSMC",""],
            "Template": {
                "tssupdate3 -add_project -chip <chip> -rev <rev> -foundry <foundry>": ""
            }
        },
        "update_pattern":{
            "mandatory":{
                "update_pattern":{
                    "type":"string",
                    "description":"pattern names"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                }
            },
            "optional": {},
            "example": ["tssupdate3 -update_pattern MBURST_tk_atpg_int_lpc_titanife1_XMD -chip testing_prj -rev r1_0 -block ATPG_POIPU"],
            "Template": {
                "tssupdate3 -update_pattern <update_pattern> -chip <chip> -rev <rev> -block <block>": ""
            }       
        },
        "add_block":{
            "mandatory":{
                "add_block":{
                    "type":"string",
                    "description":"block name"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "category":{
                    "type":"string",
                    "description":"category name"
                },
                "block_category":{
                    "type":"string",
                    "description":"block category name",
                    "choice":"'DV','DFT'"
                },
                "sim_dv_poc":{
                    "type":"string",
                    "description":"sim/dv name"
                },
                "te_poc":{
                    "type":"string",
                    "description":"te name"
                },
                "phasing_tracking_stage":{
                    "type":"string",
                    "description":"phasing tracking stage"
                }
            },
            "optional":{},
            "example":["tssupdate3 -add_block ACC -chip testing_prj -rev r1_0 -category ATPG -block_category DV -sim_dv_poc sundara -te_poc sundara -phasing_tracking_stage WS",""],
            "Template":{
                "tssupdate3 -add_block <add_block> -chip <chip> -rev <rev> -category <category> -block_category <block_category> -sim_dv_poc <sim_dv_poc> -te_poc <te_poc> -phasing_tracking_stage <phasing_tracking_stage>":""
            }
        },
        "rename_block":{
            "mandatory":{
				"rename_block":{
					"type": "string",
					"description": "rename BlockNames"
				},
				"chip": {
					"type": "string",
					"description": "Project name",
					"Function": "get_project_name()"
				},
				"rev": {
					"type": "string",
					"description": "revision name",
					"Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                }
			},
            "optional": {},
            "example": ["tssupdate3 -rename_block ACC_NEWBLOCk -chip testing_prj -rev r1_0 -block ACC",""],
            "Template": {
                "tssupdate3 -rename_block <rename_block> -chip <chip> -rev <rev> -block <block>": ""
            }	
        },
        "remove_block":{
			"mandatory":{
				"remove_block":{
					"type": "string",
					"description": "BlockNames"
				},
				"chip": {
					"type": "string",
					"description": "Project name",
					"Function": "get_project_name()"
				},
				"rev": {
					"type": "string",
					"description": "revision name",
					"Function": "get_revision_name(chip)"
                }
			},
            "optional": {},
            "example": ["tssupdate3 -remove_block T1 -chip testing_prj -rev r1_0",""],
            "Template": {
                "tssupdate3 -remove_block <remove_block> -chip <chip> -rev <rev>": ""
            }	
        },
        "remove_milestone":{
            "mandatory": {
                "remove_milestone": {
                    "type": "string",
                    "description": "milestone name"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "foundry":{
                    "type":"string",
                    "description":"foundry name"
                }
            },
            "optional": {},
            "example": ["tssupdate3 -remove_milestone SOD,CS -chip testing_prj -rev r1_0 -foundry TSMC",""],
            "Template": {
                "tssupdate3 -remove_milestone <remove_milestone> -chip <chip> -rev <rev> -foundry <foundry>": ""
            }	
        },
        "update_label":{
            "mandatory": {
                "update_label": {
                    "type":"string",
                    "description":"label name"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                },
				"port_name": {
					"type": "string",
					"description": "port name"
				},
				"xmode": {
					"type": "string",
					"description": "select xmode",
					"choice": "X1,X2,X3,X4,X5,X6,X7,X8"
				},
				"vector_process": {
					"type": "string",
					"description": "vector process",
					"choice": "D2ATE,PA,STIL_EVCD,MANUAL,LEGACY"
                },
                "frequency":{
                    "type":"float",
                    "description":"frequency"
                },
				"bin_si_revision": {
					"type": "string",
					"description": "bin si revision"
				}
            },
            "optional": {},
            "example": ["tssupdate3 -update_label tk_atpg_int_lpc_ch4_clk -chip testing_prj -rev r1_0 -block ATPG_POIPU -port_name TIC -xmode x1 -vector_process MANUAL -frequency 20 -bin_si_revision r1_0",""],
            "Template": {
            "tssupdate3 -update_label <update_label> -chip <chip> -rev <rev> -block <block> -port_name <port_name> -xmode <xmode> -vector_process <vector_process> -frequency <frequency> -bin_si_revision <bin_si_revision>": ""
        }
    },
        "add_pattern":{
            "mandatory": {
                "add_pattern":{
                    "type":"string",
                    "description":"pattern names"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                },
				"port_name": {
					"type": "string",
					"description": "port name"
				},
                "sim_engineer":{
                    "type":"string",
                    "description":"sim engineer's name"
                },
                "pattern_type":{
                    "type":"string",
                    "description": "pattern name",
                    "choice":"'PROD','EVAL','RMA','QMFAT','BURN_IN','DEBUG','REPAIR'"
                },
				"xmode": {
					"type": "string",
					"description": "select xmode",
					"choice": "X1,X2,X3,X4,X5,X6,X7,X8"
				},
				"vector_process": {
					"type": "string",
					"description": "vector process",
					"choice": "D2ATE,PA,STIL_EVCD,MANUAL,LEGACY"
                },
                "frequency":{
                    "type":"float",
                    "description":"frequency"
                },
                "pattern_source":{
                    "type":"string",
                    "description":"pattern source name",
                    "choice":"'LABEL','BURST'"
                },
                "vector":{
                    "type":"string",
                    "description":"vector name"
                }
            },
            "optional": {},
            "example": ["tssupdate3 -add_pattern MBURST_tk_atpg_int_lpc_cabo6_XMD -chip testing_prj -rev r1_0 -block ATPG_POIPU -port_name BSR1 -sim_engineer sjanthik -pattern_type prod  -xmode X1 -vector_process STIL_EVCD -frequency 19.2 -pattern_source BURST -vector tk_atpg_int_lpc_aoss",""],
            "Template": {
                "tssupdate3 -add_pattern <add_pattern> -chip <chip> -rev <rev> -block <block> -port_name <port_name> -sim_engineer <sim_engineer> -pattern_type <pattern_type> -xmode <xmode> -vector_process <vector_process> -frequency <frequency> -pattern_source <pattern_source> -vector <vector>": ""
            }
        },
        "update_vector":{
            "mandatory":{
                "update_vector":{
                    "type":"string",
                    "description":"vector name"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                }
            },
            "optional":{},
            "example":["tssupdate3 -update_vector tk_atpg_int_lpc_sschm -chip testing_prj -rev r1_0 -block ATPG_POIPU2",""],
            "Template":{
                "tssupdate3 -update_vector <update_vector> -chip <chip> -rev <rev> -block <block>":""
            }
        },
        "update_block":{
            "mandatory":{
                "update_block":{
                    "type":"string",
                    "description":"block name"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "category":{
                    "type":"string",
                    "description":"category name"
                },
                "sim_dv_poc":{
                    "type":"string",
                    "description":"sim/dv name"
                },
                "te_poc":{
                    "type":"string",
                    "description":"te name"
                },
                "phasing_tracking_stage":{
                    "type":"string",
                    "description":"phasing tracking stage"
                }
            },
            "optional":{},
            "example":["tssupdate3 -update_block ACC -chip testing_prj -rev r1_0 -category ATPG -sim_dv_poc sundara -te_poc sundara -phasing_tracking_stage WS",""],
            "Template":{
                "tssupdate3 -update_block <update_block> -chip <chip> -rev <rev> -category <category> -sim_dv_poc <sim_dv_poc> -te_poc <te_poc> -phasing_tracking_stage <phasing_tracking_stage>":""
            }
        },
        "add_testsuite":{
            "mandatory":{
                "add_testsuite":{
                    "type":"string",
                    "description":"testsuite names"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                },
                "testsuite_type":{
                    "type":"string",
                    "description":"testsuite type",
                    "choice": "'PROD','EVAL','RMA','QMFAT','BURN_IN','DEBUG','UNKNOWN','REPAIR','VALIDATION'"
                }
            },
            "optional":{},
            "example":["tssupdate3 -add_testsuite testsuite1,testsuite2 -chip testing_prj -rev r1_0 -block ACC -testsuite_type PROD",""],
            "Template":{
                "tssupdate3 -add_testsuite <add_testsuite> -chip <chip> -rev <rev> -block <block> -testsuite_type <testsuite_type>":""
            }
        },
        "remove_testsuite":{
            "mandatory":{
                "remove_testsuite":{
                    "type":"string",
                    "description":"remove testsuite names"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                }
            },
            "optional":{},
            "example":["tssupdate3 -remove_testsuite testsuite1 -chip testing_prj -rev r1_0 -block ACC",""],
            "Template":{
                "tssupdate3 -remove_testsuite <remove_testsuite> -chip <chip> -rev <rev> -block <block>":""
            }
        },
        "update_testsuite":{
            "mandatory":{
                "update_testsuite":{
                    "type":"string",
                    "description":"testsuite names"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                },
                "testsuite_type":{
                    "type":"string",
                    "description":"testsuite type",
                    "choice": "'PROD','EVAL','RMA','QMFAT','BURN_IN','DEBUG','UNKNOWN','REPAIR','VALIDATION'"
                }
            },
            "optional":{},
            "example":["tssupdate3 -update_testsuite testsuite1 -chip testing_prj -rev r1_0 -block ACC -testsuite_type PROD",""],
            "Template":{
                "tssupdate3 -update_testsuite <update_testsuite> -chip <chip> -rev <rev> -block <block> -testsuite_type <testsuite_type>":""
            }
        },
        "remove_view":{
            "mandatory":{
                "remove_view":{
                    "type":"string",
                    "description":"remove view",
                    "choice":"'sim','test','qvps','pattern'"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                }
            },
            "optional":{},
            "example":["tssupdate3 -remove_view test -chip testing_prj -rev r1_0 -block CMD_TEST",""],
            "Template":{
                "tssupdate3 -remove_view <remove_view> -chip <chip> -rev <rev> -block <block>":""
            }
        },
        "unlock":{
            "mandatory":{
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                }
            },
            "optional":{},
            "example":["tssupdate3 -unlock -chip testing_prj -rev r2_0 -block ATPG_POIPU",""],
            "Template":{
                "tssupdate3 -unlock -chip <chip> -rev <rev> -block <block>":""
            }
        },
        "add_burst":{
            "mandatory":{
                "add_burst":{
                    "type":"string",
                    "description":"label names"
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                },
                "platform": {
                    "type": "enum",
                    "description": "platform name",
                    "choice": "ATE,ATE_GGC,SLT_GGC,UFLEX,ATE_QFTEE"
                }

            },
            "optional":{
                "bin_si_revision": {
					"type": "string",
					"description": "bin si revision"
                },
                "pattern_type":{
                    "type":"string",
                    "description": "pattern name",
                    "choice":"'PROD','EVAL','RMA','QMFAT','BURN_IN','DEBUG','REPAIR'"
                },
                "sim_engineer": {
                    "type": "string",
                    "description": "design engineer's name"
                },
                "burst_type":{
                    "type":"string",
                    "description":"burst type",
                    "choice":"'BURST','MBURST'"
                },
                "label":{
                    "type":"string",
                    "description":"label name"
                },
                "pattern_source":{
                    "type":"string",
                    "description":"pattern source name",
                    "choice":"'LABEL','BURST'"
                },
                "sequence":{
                    "type":"integer",
                    "description":"sequence number of the label"
                },
                "test_engineer":{
                    "type":"string",
                    "description":"test engineer's name"
                },
                "protected":{
                    "type":"string",
                    "description":"protected",
                    "choice":"'WS','FT','WS_FT'"
                }
            },
            "example":["tssupdate3 -add_burst gen_burst.csv -chip testing_prj -rev r1_0 -block CMD_TEST -platform ATE",""],
            "Template":{
                "tssupdate3 -add_burst <add_burst> -chip <chip> -rev <rev> -block <block> -platform <platform>":""
            }
        },
        "update_burst":{
            "mandatory":{
                "update_burst":{
                    "type":"string",
                    "description":"Multiple burst names with comma separated "
                },
                "chip": {
                    "type": "string",
                    "description": "Project name",
                    "Function": "get_project_name()"
                },
                "rev": {
                    "type": "string",
                    "description": "revision name",
                    "Function": "get_revision_name(chip)"
                },
                "block": {
                    "type": "string",
                    "description": "block name",
                    "Function": "get_block_name(chip,rev)"
                
                }
            },
            "optional":{
                "pattern_type":{
                    "type":"string",
                    "description": "pattern name",
                    "choice":"'PROD','EVAL','RMA','QMFAT','BURN_IN','DEBUG','REPAIR'"
                },
                "pattern_source":{
                    "type":"string",
                    "description":"pattern source name"
                },
                "sim_engineer":{
                    "type":"string",
                    "description":"sim engineer's name"
                },
                "test_engineer":{
                    "type":"string",
                    "description":"test engineer's name"
                },
                "burst_type":{
                    "type":"string",
                    "description":"burst type"
                }
            },
            "example":["tssupdate3 -update_burst MBURST_tk_atpg_saf_lpc_se0_apss_ts_pl_XMD -chip testing_prj -rev r1_0 -block CMD_TEST",""],
            "Template":{
                "tssupdate3 -update_burst <update_burst> -chip <chip> -rev <rev> -block <block>":""
            }
        },
        "copy_simulation":{
            "mandatory":{
                "source":{
                    "type":"string",
                    "description":"<chip_name>:<rev>:<block>"
                },
                "destination":{
                    "type":"string",
                    "description":"<chip_name>:<rev>:<block>"
                },
                "view":{
                    "type":"string",
                    "description":"simulation_view"
                }
            },
            "optional":{
                "include_debug_items": {
                    "type": "string",
                    "description": "debug items"
                },
                "vector":{
                    "type":"string",
                    "description":"vector name"
                },
                "keep_rev":{
                    "type":"string",
                    "description":"keep the current bin si revision"
                },
                "platform": {
                    "type": "enum",
                    "description": "platform name",
                    "choice": "ATE,ATE_GGC,SLT_GGC,UFLEX,ATE_QFTEE"
                }
            },
            "example":["tssupdate3 -copy -source testing_prj#r1_0#ATPG_POIPU -destination testing_prj#r2_0#ATPG -view sim",""],
            "Template":{
                "tssupdate3 -copy -source <source> -destination <destination> -view <view>":""

            }
        },
        "copy_pattern":{
            "mandatory":{
                "source":{
                    "type":"string",
                    "description":"<chip_name>:<rev>:<block>"
                },
                "destination":{
                    "type":"string",
                    "description":"<chip_name>:<rev>:<block>"
                },
                "view":{
                    "type":"string",
                    "description":"pattern_view"
                }
            },
            "optional":{
                "platform": {
                    "type": "enum",
                    "description": "platform name",
                    "choice": "ATE,ATE_GGC,SLT_GGC,UFLEX,ATE_QFTEE"
                }
            },
            "example":["tssupdate3 -copy -source testing_prj#r1_0#LVI -destination testing_prj#r2_0#LVI -view pattern",""],
            "Template":{
                "tssupdate3 -copy -source <source> -destination <destination> -view <view>":""
            }
        },
        "copy_phasing":{
            "mandatory":{
                "source":{
                    "type":"string",
                    "description":"<chip_name>:<rev>:<block>"
                },
                "destination":{
                    "type":"string",
                    "description":"<chip_name>:<rev>:<block>"
                },
                "view":{
                    "type":"string",
                    "description":"phasing_view"
                }
            },
            "optional":{
                "platform": {
                    "type": "enum",
                    "description": "platform name",
                    "choice": "ATE,ATE_GGC,SLT_GGC,UFLEX,ATE_QFTEE"
                }
            },
            "example":["tssupdate3 -copy -source testing_prj#r1_0#ATPG_POIPU -destination testing_prj#r2_0#ATPG -view phasing",""],
            "Template":{
                "tssupdate3 -copy -source <source> -destination <destination> -view <view>":""
            }
        }
    }
}